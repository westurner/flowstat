{% extends "base.jinja2" %}

{% block title %}Factor Graph : {{ n }}{% endblock %}
{% block extrajs %}
<script type="text/javascript" src="/static/d3/d3.js"></script>
<script type="text/javascript" src="/static/d3/d3.geom.min.js"></script>
<script type="text/javascript" src="/static/d3/d3.layout.js"></script>

{% endblock extrajs %}
{% block extracss %}
<style type="text/css">
circle.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.nodetext {
    pointer-events: none;
    font: 10px sans-serif;
}

line.link {
  stroke: #999;
  stroke-opacity: .6;
}
</style>
{% endblock extracss %}
{% block content %}
<div id="sections">
    <h1><a href="{{ request.route_url('factors_of', n=n) }}">{{ n }}</a></h1>
<div id="chart"></div>
</div>
<script type="text/javascript">

    var n = {{ n }};
    var data_url = "{{ request.route_url('factors_of', n=n) }}";


    var w = {{ opts.width }},
        h = {{ opts.height }},
        fill = d3.scale.category20();

    var vis = d3.select("#chart")
        .append("svg:svg")
            .attr("width", w)
            .attr("height", h);

            d3.json(data_url, function(json) {
        var force = d3.layout.force()
            .charge({{ opts.charge }})
            .linkDistance({{ opts.link_distance }})
            .gravity({{ opts.gravity }})
            .size([w, h])
            .nodes(json.nodes)
            .links(json.links)
            .start();

        var link = vis.selectAll("line.link")
            .data(json.links)
            .enter().append("svg:line")
            .attr("class", "link")
            .style("stroke-width", function(d) { return d.power*2;  })
            .style("stroke", function(d) { return fill(d.type=="primeFactor" ? 0 : 1); })
            .attr("x1", function(d) { return d.source.x; })
            .attr("y1", function(d) { return d.source.y; })
            .attr("x2", function(d) { return d.target.x; })
            .attr("y2", function(d) { return d.target.y; });

        link.append("svg:title")
            .text(function(d) { return d.type + ": " + d.source.id + " -> " + d.target.id + " (" +
                    d.power + ")"; });

        var node = vis.selectAll("circle.node")
            .data(json.nodes)
            .enter().append("svg:circle")
            .attr("class", "node")
            .attr("cx", function(d) { return d.x; })
            .attr("cy", function(d) { return d.y; })
            .attr("r", 12)
            .style("fill", function(d) {
                    _node = json.nodes[d.index];
                    group = (d.group || 0)-((_node && _node.type=='self') ? 1 : 0);
                    color = fill(group);
                return color
                }
            )
            .call(force.drag);

        node.append("svg:text")
            .attr("class", "nodetext")
            .attr("dx", 12)
            .attr("dy", ".35em")
            .text(function(d) { return d.id }); 

        node.append("svg:title")
            .text(function(d) { return d.id; });

        vis.style("opacity", 1e-6)
            .transition()
            .duration(1000)
            .style("opacity", 1);

        var r = 6; 
        force
            .on("tick", function() {
    node.attr("cx", function(d) { return d.x = Math.max(r, Math.min(w - r, d.x)); })
        .attr("cy", function(d) { return d.y = Math.max(r, Math.min(h - r, d.y)); });

    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });
            });
        });

    </script>

</script>

<h2>Prime Factorization</h2>
<span style="font-size:1.5em">{{ n }} = {{ primefactorization }}</span>


<div id="chart2"></div>
<script type="text/javascript">
    /*
    var r = 960 / 2,
        splines = [];

    var cluster = d3.layout.cluster()
        .size([360, r - 120])
        .sort(null)
        .value(function(d) { return d.size; });

    var bundle = d3.layout.bundle();

    var line = d3.svg.line.radial()
        .interpolate("bundle")
        .tension(.85)
        .radius(function(d) { return d.y; })
        .angle(function(d) { return d.x / 180 * Math.PI; });

    var vis = d3.select("#chart2").append("svg:svg")
        .attr("width", r * 2)
        .attr("height", r * 2)
    .append("svg:g")
        .attr("transform", "translate(" + r + "," + r + ")");

    d3.json(data_url, function(json) {
        var nodes = cluster.nodes(json.nodes);
        var links = json.links;

        nodes2 = nodes.map(function(d) { d.parent=0; return d });

        console.log("LINKS2")
        links2 = links.map(function(d) { console.log(d);  d.parent=0; return d });

        console.log(links2);

        vis.selectAll("path.link")
        .data(splines = bundle(links2))
            .enter().append("svg:path")
            .attr("class", "link")
            .attr("d", line);

        vis.selectAll("g.node")
            .data(nodes2.filter(function(n) { return !n.children; }))
            .enter().append("svg:g")
            .attr("class", "node")
            .attr("transform", function(d) { return "rotate(" + (d.x - 90) + ")translate(" + d.y + ")"; })
            .append("svg:text")
            .attr("dx", function(d) { return d.x < 180 ? 8 : -8; })
            .attr("dy", ".31em")
            .attr("text-anchor", function(d) { return d.x < 180 ? "start" : "end"; })
            .attr("transform", function(d) { return d.x < 180 ? null : "rotate(180)"; })
            .text(function(d) { return d.key; });
        });

        d3.select(window).on("mousemove", function() {
           vis.selectAll("path.link")
                .data(splines)
                .attr("d", line.tension(Math.min(1, d3.event.clientX / 960)));
                });
                */
</script>

{% endblock content %}

{% block sidebar %}
<h1>{{n}}</h1>
<h2>Primality</h2>
<span>IS {% if not isprime %}NOT{% endif %} a prime number</span><br />
<span>{{ primefactorcount }} prime factor{% if primefactorcount > 1 %}s{% endif %}</span>
<span>({{ primefactorcount_unique }} unique{% if primefactorcount_unique > 1 %}s{% endif %})</span>

{% for k,v in altreps.iteritems() %}
    <h2>{{ k }}</h2>
    <span>{{ v }}</span>
{% endfor %}
<h2>Links</h2>
<ul id="number_links" style="list-style-type:none">
    <li><a target="_blank" href="http://en.wikipedia.org/wiki/{{n}}">{{n}} @Wikipedia</a></li>
    <li><a target="_blank" href="http://mathworld.wolfram.com/{{n}}.html">{{n}} @Wolfram Mathworld</a></li>
    <li><a target="_blank" href="http://www.wolframalpha.com/input/?i={{n}}">{{n}} @Wolfram Alpha</a></li>
</ul>
<h2>Download</h2>
<ul id="download_links" style="list-style-type:none">
    <li><a href="/factors/{{n}}.graphml">Factor Graph GraphML</a></li>
    <li><a href="{{ request.route_url('factors', n=n) }}">Permalink</a></li>
</ul>
<h2>Navigation</h2>
<a href="{{ request.route_url('factors_of', n=n-1) }}">-1: {{n-1}}</a>
<a href="{{ request.route_url('factors_of', n=n+1) }}">+1: {{n+1}}</a>
{% endblock sidebar %}
